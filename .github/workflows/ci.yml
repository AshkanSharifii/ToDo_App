name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main] 

jobs:
  test-todoapp:
    name: Test TodoApp Service
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        cd ToDoApp
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov httpx
        
    - name: Create .env file for tests
      run: |
        cd ToDoApp
        echo "SECRET_KEY=test_secret_key_for_ci" > .env
        echo "DATABASE_URL=sqlite:///./test.db" >> .env
        echo "CONSUL_HOST=localhost" >> .env
        echo "CONSUL_PORT=8500" >> .env
        echo "CONSUL_ENABLED=false" >> .env
        echo "SERVICE_PORT=8080" >> .env
        cat .env  # Debug - print .env contents
        
    - name: Run tests
      run: |
        cd ToDoApp
        PYTHONPATH=$PYTHONPATH:$(pwd) pytest --cov=app
        
    - name: Build Docker image
      run: |
        cd ToDoApp
        docker build -t todoapp:latest .

  test-notification:
    name: Test Notification Service
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        cd NotificationService
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov httpx
        
    - name: Create .env file for tests
      run: |
        cd NotificationService
        echo "CONSUL_HOST=localhost" > .env
        echo "CONSUL_PORT=8500" >> .env
        echo "CONSUL_ENABLED=false" >> .env
        cat .env  # Debug - print .env contents
        
    - name: Run tests
      run: |
        cd NotificationService
        PYTHONPATH=$PYTHONPATH:$(pwd) pytest --cov=app
        
    - name: Build Docker image
      run: |
        cd NotificationService
        docker build -t notification-service:latest .
